#!/bin/bash

# Mock Claude Code CLI that returns all message types to test comprehensive message parsing
# This simulates a complete conversation flow with all message types

# 1. System message (init)
cat << 'EOF'
{"type":"system","subtype":"init","apiKeySource":"environment","cwd":"/test","session_id":"test-session-123","tools":["Read","Write","Bash"],"mcp_servers":[],"model":"claude-3-5-sonnet-20241022","permissionMode":"default"}
EOF

# 2. User message 
cat << 'EOF'
{"type":"user","content":"Hello Claude, what is 2+2?"}
EOF

# 3. Assistant message
cat << 'EOF'
{"type":"assistant","message":{"role":"assistant","content":[{"type":"text","text":"Hello! 2+2 equals 4."}]},"session_id":"test-session-123"}
EOF

# 4. System message (different subtype)
cat << 'EOF'
{"type":"system","subtype":"status","message":"Processing complete","timestamp":"2024-01-01T00:00:00Z"}
EOF

# 5. Result message
cat << 'EOF'
{"type":"result","subtype":"query","duration_ms":1500,"duration_api_ms":800,"is_error":false,"num_turns":1,"result":"4","session_id":"test-session-123","total_cost_usd":0.001,"usage":{"input_tokens":10,"output_tokens":15}}
EOF